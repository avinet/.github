name: Build and release npm package

on:
  push:
    branches: ['$default-branch']
  pull_request:
    branches: ['*']

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Setup node to publish to GitHub Packages
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@avinet'

      - name: Cache node_modules
        id: cache-node-modules 
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      # ci requires a package-lock.json to be present and ensures the same
      # package versions are used during this build, change this to install if
      # that is not desired.
      #
      # Scripts are ignored to avoid scripts stealing the NODE_AUTH_TOKEN
      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci --ignore-scripts
        env:
          # AVINET_PACKAGES_TOKEN is an organization wide secret, no need to set per repository
          NODE_AUTH_TOKEN: ${{ secrets.AVINET_PACKAGES_TOKEN }}

      # Run scripts without NODE_AUTH_TOKEN
      - name: Run post-install scripts
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm rebuild

      - name: Build package
        run: npm run build

      # PRs only
      - name: Publish pre-release package to GitHub Packages (PRs only)
        uses: avinet/action-npm-publish-pull-request@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Main branch only
      - name: Publish production package to GitHub Packages
        run: npm publish --access restricted
        if: contains(github.ref, '$default-branch')
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
